#############################################################################
# Makefile for building: ../../../BIN/mdiswiz
# Generated by qmake (1.05a) (Qt 3.1.2) on: Fri Jun  6 13:01:33 2003
# Project:  mdiswiz.pro
# Template: app
# Command: $(QMAKE) -o Makefile mdiswiz.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -O2  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I. -Ihelpviewer -Imodels -I$(QTDIR)/include -I.moc/mw_linux/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS)  -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib -L/usr/X11R6/lib -static -lqt -lSM -lICE -ldl -lXinerama -lXrender -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/mw_linux/

####### Files

HEADERS = cfgmakefile.h \
		configuration.h \
		descfile.h \
		descriptor.h \
		devgenericprop.h \
		dipbutton.h \
		dipswitch.h \
		execprogram.h \
		hexeditwidget.h \
		hwcomponent.h \
		install.h \
		instnamewidget.h \
		mdiswiz.h \
		mdiswizdialogs.h \
		modelfactory.h \
		namemng.h \
		oslinux.h \
		packagedb.h \
		packagefile.h \
		propertiesdlg.h \
		resourcemng.h \
		setting.h \
		swmodule.h \
		swmodulestab.h \
		targetos.h \
		typestr.h \
		util.h \
		vmsgbox.h \
		wizexcept.h \
		models/modbbisa201.h \
		models/modbbisa201proptab.h \
		models/modbbisisa.h \
		models/modbbispcigen.h \
		models/modbbispcigenproptab.h \
		models/modbbispcimmod.h \
		models/modbbispcimmodproptab.h \
		models/modcpua12.h \
		models/modcpub11.h \
		models/modcpucpcipc.h \
		models/modcpud2.h \
		models/modcpuf1n.h \
		models/modcpuf7.h \
		models/modcpupc.h \
		models/modmdisgeneric.h
SOURCES = cfgmakefile.cpp \
		configuration.cpp \
		descfile.cpp \
		descriptor.cpp \
		devgenericprop.cpp \
		dipbutton.cpp \
		dipswitch.cpp \
		execprogram.cpp \
		hexeditwidget.cpp \
		hwcomponent.cpp \
		install.cpp \
		instnamewidget.cpp \
		main.cpp \
		mdiswiz.cpp \
		modelfactory.cpp \
		namemng.cpp \
		oslinux.cpp \
		packagedb.cpp \
		packagefile.cpp \
		propertiesdlg.cpp \
		pkg2dsc.cpp \
		pkg2inf.cpp \
		resourcemng.cpp \
		setting.cpp \
		swmodule.cpp \
		swmodulestab.cpp \
		util.cpp \
		vmsgbox.cpp \
		models/modbbisa201.cpp \
		models/modbbisa201proptab.cpp \
		models/modbbisisa.cpp \
		models/modbbispcigen.cpp \
		models/modbbispcigenproptab.cpp \
		models/modbbispcimmod.cpp \
		models/modbbispcimmodproptab.cpp \
		models/modcpua12.cpp \
		models/modcpub11.cpp \
		models/modcpucpcipc.cpp \
		models/modcpud2.cpp \
		models/modcpuf1n.cpp \
		models/modcpuf7.cpp \
		models/modcpupc.cpp \
		models/modmdisgeneric.cpp \
		libdl.c
OBJECTS = .obj/mw_linux/cfgmakefile.o \
		.obj/mw_linux/configuration.o \
		.obj/mw_linux/descfile.o \
		.obj/mw_linux/descriptor.o \
		.obj/mw_linux/devgenericprop.o \
		.obj/mw_linux/dipbutton.o \
		.obj/mw_linux/dipswitch.o \
		.obj/mw_linux/execprogram.o \
		.obj/mw_linux/hexeditwidget.o \
		.obj/mw_linux/hwcomponent.o \
		.obj/mw_linux/install.o \
		.obj/mw_linux/instnamewidget.o \
		.obj/mw_linux/main.o \
		.obj/mw_linux/mdiswiz.o \
		.obj/mw_linux/modelfactory.o \
		.obj/mw_linux/namemng.o \
		.obj/mw_linux/oslinux.o \
		.obj/mw_linux/packagedb.o \
		.obj/mw_linux/packagefile.o \
		.obj/mw_linux/propertiesdlg.o \
		.obj/mw_linux/pkg2dsc.o \
		.obj/mw_linux/pkg2inf.o \
		.obj/mw_linux/resourcemng.o \
		.obj/mw_linux/setting.o \
		.obj/mw_linux/swmodule.o \
		.obj/mw_linux/swmodulestab.o \
		.obj/mw_linux/util.o \
		.obj/mw_linux/vmsgbox.o \
		.obj/mw_linux/modbbisa201.o \
		.obj/mw_linux/modbbisa201proptab.o \
		.obj/mw_linux/modbbisisa.o \
		.obj/mw_linux/modbbispcigen.o \
		.obj/mw_linux/modbbispcigenproptab.o \
		.obj/mw_linux/modbbispcimmod.o \
		.obj/mw_linux/modbbispcimmodproptab.o \
		.obj/mw_linux/modcpua12.o \
		.obj/mw_linux/modcpub11.o \
		.obj/mw_linux/modcpucpcipc.o \
		.obj/mw_linux/modcpud2.o \
		.obj/mw_linux/modcpuf1n.o \
		.obj/mw_linux/modcpuf7.o \
		.obj/mw_linux/modcpupc.o \
		.obj/mw_linux/modmdisgeneric.o \
		.obj/mw_linux/libdl.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = .moc/mw_linux/moc_devgenericprop.cpp \
		.moc/mw_linux/moc_dipbutton.cpp \
		.moc/mw_linux/moc_dipswitch.cpp \
		.moc/mw_linux/moc_execprogram.cpp \
		.moc/mw_linux/moc_hwcomponent.cpp \
		.moc/mw_linux/moc_install.cpp \
		.moc/mw_linux/moc_mdiswiz.cpp \
		.moc/mw_linux/moc_mdiswizdialogs.cpp \
		.moc/mw_linux/moc_oslinux.cpp \
		.moc/mw_linux/moc_propertiesdlg.cpp \
		.moc/mw_linux/moc_setting.cpp \
		.moc/mw_linux/moc_swmodulestab.cpp \
		.moc/mw_linux/moc_modbbisa201proptab.cpp
OBJMOC = .obj/mw_linux/moc_devgenericprop.o \
		.obj/mw_linux/moc_dipbutton.o \
		.obj/mw_linux/moc_dipswitch.o \
		.obj/mw_linux/moc_execprogram.o \
		.obj/mw_linux/moc_hwcomponent.o \
		.obj/mw_linux/moc_install.o \
		.obj/mw_linux/moc_mdiswiz.o \
		.obj/mw_linux/moc_mdiswizdialogs.o \
		.obj/mw_linux/moc_oslinux.o \
		.obj/mw_linux/moc_propertiesdlg.o \
		.obj/mw_linux/moc_setting.o \
		.obj/mw_linux/moc_swmodulestab.o \
		.obj/mw_linux/moc_modbbisa201proptab.o
DIST	   = mdiswiz.pro
QMAKE_TARGET = mdiswiz
DESTDIR  = ../../../BIN/
TARGET   = ../../../BIN/mdiswiz

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	test -d ../../../BIN/ || mkdir -p ../../../BIN/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: mdiswiz.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile mdiswiz.pro
qmake: 
	@$(QMAKE) -o Makefile mdiswiz.pro

dist: 
	@mkdir -p .obj/mw_linux/mdiswiz && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/mw_linux/mdiswiz/ && ( cd `dirname .obj/mw_linux/mdiswiz` && $(TAR) mdiswiz.tar mdiswiz && $(GZIP) mdiswiz.tar ) && $(MOVE) `dirname .obj/mw_linux/mdiswiz`/mdiswiz.tar.gz . && $(DEL_FILE) -r .obj/mw_linux/mdiswiz

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../../BIN/$(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/mw_linux/cfgmakefile.o: cfgmakefile.cpp wizdebug.h \
		cfgmakefile.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/cfgmakefile.o cfgmakefile.cpp

.obj/mw_linux/configuration.o: configuration.cpp cfgmakefile.h \
		configuration.h \
		hwcomponent.h \
		descfile.h \
		descriptor.h \
		modelfactory.h \
		targetos.h \
		swmodule.h \
		wizdebug.h \
		wizexcept.h \
		swmodulestab.h \
		vmsgbox.h \
		namemng.h \
		setting.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/configuration.o configuration.cpp

.obj/mw_linux/descfile.o: descfile.cpp wizdebug.h \
		descfile.h \
		descriptor.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/descfile.o descfile.cpp

.obj/mw_linux/descriptor.o: descriptor.cpp descriptor.h \
		wizdebug.h \
		wizexcept.h \
		util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/descriptor.o descriptor.cpp

.obj/mw_linux/devgenericprop.o: devgenericprop.cpp wizdebug.h \
		devgenericprop.h \
		descriptor.h \
		configuration.h \
		propertiesdlg.h \
		models/modmdisgeneric.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/devgenericprop.o devgenericprop.cpp

.obj/mw_linux/dipbutton.o: dipbutton.cpp dipbutton.h \
		wizdebug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/dipbutton.o dipbutton.cpp

.obj/mw_linux/dipswitch.o: dipswitch.cpp dipbutton.h \
		dipswitch.h \
		wizdebug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/dipswitch.o dipswitch.cpp

.obj/mw_linux/execprogram.o: execprogram.cpp wizdebug.h \
		execprogram.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/execprogram.o execprogram.cpp

.obj/mw_linux/hexeditwidget.o: hexeditwidget.cpp hexeditwidget.h \
		wizdebug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/hexeditwidget.o hexeditwidget.cpp

.obj/mw_linux/hwcomponent.o: hwcomponent.cpp wizdebug.h \
		mdiswiz.h \
		hwcomponent.h \
		resourcemng.h \
		configuration.h \
		propertiesdlg.h \
		descriptor.h \
		targetos.h \
		swmodule.h \
		vmsgbox.h \
		typestr.h \
		wizexcept.h \
		namemng.h \
		setting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/hwcomponent.o hwcomponent.cpp

.obj/mw_linux/install.o: install.cpp wizdebug.h \
		install.h \
		packagefile.h \
		swmodule.h \
		vmsgbox.h \
		util.h \
		hwcomponent.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/install.o install.cpp

.obj/mw_linux/instnamewidget.o: instnamewidget.cpp instnamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/instnamewidget.o instnamewidget.cpp

.obj/mw_linux/main.o: main.cpp mdiswiz.h \
		wizdebug.h \
		modelfactory.h \
		configuration.h \
		oslinux.h \
		vmsgbox.h \
		packagedb.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h \
		targetos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/main.o main.cpp

.obj/mw_linux/mdiswiz.o: mdiswiz.cpp mdiswiz.h \
		wizdebug.h \
		hwcomponent.h \
		modelfactory.h \
		mdiswizdialogs.h \
		configuration.h \
		vmsgbox.h \
		targetos.h \
		packagedb.h \
		images/cpu.xpm \
		images/bbis.xpm \
		images/mdisdev.xpm \
		images/fileopen.xpm \
		images/filenew.xpm \
		images/filesave.xpm \
		images/settings.xpm \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/mdiswiz.o mdiswiz.cpp

.obj/mw_linux/modelfactory.o: modelfactory.cpp modelfactory.h \
		wizdebug.h \
		models/modbbisa201.h \
		models/modbbisisa.h \
		models/modbbispcigen.h \
		models/modbbispcimmod.h \
		models/modcpua12.h \
		models/modcpub11.h \
		models/modcpud2.h \
		models/modcpuf1n.h \
		models/modcpuf7.h \
		models/modcpucpcipc.h \
		models/modcpupc.h \
		models/modmdisgeneric.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modelfactory.o modelfactory.cpp

.obj/mw_linux/namemng.o: namemng.cpp namemng.h \
		wizdebug.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/namemng.o namemng.cpp

.obj/mw_linux/oslinux.o: oslinux.cpp wizdebug.h \
		configuration.h \
		hwcomponent.h \
		oslinux.h \
		cfgmakefile.h \
		swmodulestab.h \
		packagedb.h \
		setting.h \
		vmsgbox.h \
		util.h \
		install.h \
		modelfactory.h \
		mdiswizdialogs.h \
		mdiswiz.h \
		execprogram.h \
		images/build.xpm \
		images/rebuild.xpm \
		descriptor.h \
		namemng.h \
		swmodule.h \
		wizexcept.h \
		typestr.h \
		targetos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/oslinux.o oslinux.cpp

.obj/mw_linux/packagedb.o: packagedb.cpp wizdebug.h \
		packagedb.h \
		packagefile.h \
		configuration.h \
		modelfactory.h \
		vmsgbox.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/packagedb.o packagedb.cpp

.obj/mw_linux/packagefile.o: packagefile.cpp wizdebug.h \
		packagefile.h \
		modelfactory.h \
		models/modmdisgeneric.h \
		util.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/packagefile.o packagefile.cpp

.obj/mw_linux/propertiesdlg.o: propertiesdlg.cpp wizdebug.h \
		propertiesdlg.h \
		instnamewidget.h \
		hwcomponent.h \
		wizexcept.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/propertiesdlg.o propertiesdlg.cpp

.obj/mw_linux/pkg2dsc.o: pkg2dsc.cpp wizdebug.h \
		modelfactory.h \
		configuration.h \
		oslinux.h \
		packagefile.h \
		descfile.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h \
		targetos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/pkg2dsc.o pkg2dsc.cpp

.obj/mw_linux/pkg2inf.o: pkg2inf.cpp modelfactory.h \
		configuration.h \
		oslinux.h \
		packagefile.h \
		descfile.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h \
		targetos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/pkg2inf.o pkg2inf.cpp

.obj/mw_linux/resourcemng.o: resourcemng.cpp resourcemng.h \
		wizdebug.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/resourcemng.o resourcemng.cpp

.obj/mw_linux/setting.o: setting.cpp wizdebug.h \
		propertiesdlg.h \
		hwcomponent.h \
		configuration.h \
		setting.h \
		util.h \
		vmsgbox.h \
		swmodule.h \
		typestr.h \
		descriptor.h \
		namemng.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/setting.o setting.cpp

.obj/mw_linux/swmodule.o: swmodule.cpp swmodule.h \
		wizdebug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/swmodule.o swmodule.cpp

.obj/mw_linux/swmodulestab.o: swmodulestab.cpp wizdebug.h \
		swmodulestab.h \
		configuration.h \
		vmsgbox.h \
		swmodule.h \
		descriptor.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/swmodulestab.o swmodulestab.cpp

.obj/mw_linux/util.o: util.cpp wizdebug.h \
		util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/util.o util.cpp

.obj/mw_linux/vmsgbox.o: vmsgbox.cpp wizdebug.h \
		vmsgbox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/vmsgbox.o vmsgbox.cpp

.obj/mw_linux/modbbisa201.o: models/modbbisa201.cpp wizdebug.h \
		models/modbbisa201.h \
		models/modbbisa201proptab.h \
		configuration.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h \
		propertiesdlg.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbisa201.o models/modbbisa201.cpp

.obj/mw_linux/modbbisa201proptab.o: models/modbbisa201proptab.cpp models/modbbisa201proptab.h \
		wizdebug.h \
		dipswitch.h \
		hexeditwidget.h \
		propertiesdlg.h \
		wizexcept.h \
		models/modbbisa201.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbisa201proptab.o models/modbbisa201proptab.cpp

.obj/mw_linux/modbbisisa.o: models/modbbisisa.cpp models/modbbisisa.h \
		wizdebug.h \
		configuration.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbisisa.o models/modbbisisa.cpp

.obj/mw_linux/modbbispcigen.o: models/modbbispcigen.cpp models/modbbispcigen.h \
		wizdebug.h \
		models/modbbispcigenproptab.h \
		configuration.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h \
		propertiesdlg.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbispcigen.o models/modbbispcigen.cpp

.obj/mw_linux/modbbispcigenproptab.o: models/modbbispcigenproptab.cpp models/modbbispcigenproptab.h \
		propertiesdlg.h \
		wizdebug.h \
		wizexcept.h \
		resourcemng.h \
		models/modbbispcigen.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbispcigenproptab.o models/modbbispcigenproptab.cpp

.obj/mw_linux/modbbispcimmod.o: models/modbbispcimmod.cpp models/modbbispcimmod.h \
		models/modbbispcimmodproptab.h \
		wizdebug.h \
		devgenericprop.h \
		configuration.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h \
		propertiesdlg.h \
		models/modmdisgeneric.h \
		namemng.h \
		setting.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbispcimmod.o models/modbbispcimmod.cpp

.obj/mw_linux/modbbispcimmodproptab.o: models/modbbispcimmodproptab.cpp models/modbbispcimmodproptab.h \
		propertiesdlg.h \
		wizdebug.h \
		wizexcept.h \
		resourcemng.h \
		models/modbbispcimmod.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modbbispcimmodproptab.o models/modbbispcimmodproptab.cpp

.obj/mw_linux/modcpua12.o: models/modcpua12.cpp models/modcpua12.h \
		wizdebug.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		models/modbbispcigen.h \
		swmodule.h \
		typestr.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpua12.o models/modcpua12.cpp

.obj/mw_linux/modcpub11.o: models/modcpub11.cpp models/modcpub11.h \
		wizdebug.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		models/modbbispcigen.h \
		swmodule.h \
		typestr.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpub11.o models/modcpub11.cpp

.obj/mw_linux/modcpucpcipc.o: models/modcpucpcipc.cpp models/modcpucpcipc.h \
		wizdebug.h \
		hwcomponent.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpucpcipc.o models/modcpucpcipc.cpp

.obj/mw_linux/modcpud2.o: models/modcpud2.cpp models/modcpud2.h \
		wizdebug.h \
		resourcemng.h \
		modelfactory.h \
		configuration.h \
		hwcomponent.h \
		descriptor.h \
		models/modbbispcigen.h \
		swmodule.h \
		typestr.h \
		wizexcept.h \
		namemng.h \
		setting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpud2.o models/modcpud2.cpp

.obj/mw_linux/modcpuf1n.o: models/modcpuf1n.cpp models/modcpuf1n.h \
		wizdebug.h \
		resourcemng.h \
		hwcomponent.h \
		descriptor.h \
		models/modbbispcigen.h \
		swmodule.h \
		typestr.h \
		wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpuf1n.o models/modcpuf1n.cpp

.obj/mw_linux/modcpuf7.o: models/modcpuf7.cpp models/modcpuf7.h \
		wizdebug.h \
		resourcemng.h \
		modelfactory.h \
		configuration.h \
		models/modbbisisa.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h \
		wizexcept.h \
		namemng.h \
		setting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpuf7.o models/modcpuf7.cpp

.obj/mw_linux/modcpupc.o: models/modcpupc.cpp models/modcpupc.h \
		wizdebug.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modcpupc.o models/modcpupc.cpp

.obj/mw_linux/modmdisgeneric.o: models/modmdisgeneric.cpp wizdebug.h \
		models/modmdisgeneric.h \
		devgenericprop.h \
		wizexcept.h \
		swmodule.h \
		hwcomponent.h \
		descriptor.h \
		typestr.h \
		propertiesdlg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/modmdisgeneric.o models/modmdisgeneric.cpp

.obj/mw_linux/libdl.o: libdl.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/mw_linux/libdl.o libdl.c

.obj/mw_linux/moc_devgenericprop.o: .moc/mw_linux/moc_devgenericprop.cpp devgenericprop.h propertiesdlg.h \
		models/modmdisgeneric.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_devgenericprop.o .moc/mw_linux/moc_devgenericprop.cpp

.obj/mw_linux/moc_dipbutton.o: .moc/mw_linux/moc_dipbutton.cpp dipbutton.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_dipbutton.o .moc/mw_linux/moc_dipbutton.cpp

.obj/mw_linux/moc_dipswitch.o: .moc/mw_linux/moc_dipswitch.cpp dipswitch.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_dipswitch.o .moc/mw_linux/moc_dipswitch.cpp

.obj/mw_linux/moc_execprogram.o: .moc/mw_linux/moc_execprogram.cpp execprogram.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_execprogram.o .moc/mw_linux/moc_execprogram.cpp

.obj/mw_linux/moc_hwcomponent.o: .moc/mw_linux/moc_hwcomponent.cpp hwcomponent.h swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_hwcomponent.o .moc/mw_linux/moc_hwcomponent.cpp

.obj/mw_linux/moc_install.o: .moc/mw_linux/moc_install.cpp install.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_install.o .moc/mw_linux/moc_install.cpp

.obj/mw_linux/moc_mdiswiz.o: .moc/mw_linux/moc_mdiswiz.cpp mdiswiz.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_mdiswiz.o .moc/mw_linux/moc_mdiswiz.cpp

.obj/mw_linux/moc_mdiswizdialogs.o: .moc/mw_linux/moc_mdiswizdialogs.cpp mdiswizdialogs.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_mdiswizdialogs.o .moc/mw_linux/moc_mdiswizdialogs.cpp

.obj/mw_linux/moc_oslinux.o: .moc/mw_linux/moc_oslinux.cpp oslinux.h setting.h \
		targetos.h \
		swmodule.h \
		configuration.h \
		hwcomponent.h \
		wizexcept.h \
		descriptor.h \
		namemng.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_oslinux.o .moc/mw_linux/moc_oslinux.cpp

.obj/mw_linux/moc_propertiesdlg.o: .moc/mw_linux/moc_propertiesdlg.cpp propertiesdlg.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_propertiesdlg.o .moc/mw_linux/moc_propertiesdlg.cpp

.obj/mw_linux/moc_setting.o: .moc/mw_linux/moc_setting.cpp setting.h wizexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_setting.o .moc/mw_linux/moc_setting.cpp

.obj/mw_linux/moc_swmodulestab.o: .moc/mw_linux/moc_swmodulestab.cpp swmodulestab.h swmodule.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_swmodulestab.o .moc/mw_linux/moc_swmodulestab.cpp

.obj/mw_linux/moc_modbbisa201proptab.o: .moc/mw_linux/moc_modbbisa201proptab.cpp models/modbbisa201proptab.h propertiesdlg.h \
		models/modbbisa201.h \
		hwcomponent.h \
		descriptor.h \
		swmodule.h \
		typestr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mw_linux/moc_modbbisa201proptab.o .moc/mw_linux/moc_modbbisa201proptab.cpp

.moc/mw_linux/moc_devgenericprop.cpp: $(MOC) devgenericprop.h
	$(MOC) devgenericprop.h -o .moc/mw_linux/moc_devgenericprop.cpp

.moc/mw_linux/moc_dipbutton.cpp: $(MOC) dipbutton.h
	$(MOC) dipbutton.h -o .moc/mw_linux/moc_dipbutton.cpp

.moc/mw_linux/moc_dipswitch.cpp: $(MOC) dipswitch.h
	$(MOC) dipswitch.h -o .moc/mw_linux/moc_dipswitch.cpp

.moc/mw_linux/moc_execprogram.cpp: $(MOC) execprogram.h
	$(MOC) execprogram.h -o .moc/mw_linux/moc_execprogram.cpp

.moc/mw_linux/moc_hwcomponent.cpp: $(MOC) hwcomponent.h
	$(MOC) hwcomponent.h -o .moc/mw_linux/moc_hwcomponent.cpp

.moc/mw_linux/moc_install.cpp: $(MOC) install.h
	$(MOC) install.h -o .moc/mw_linux/moc_install.cpp

.moc/mw_linux/moc_mdiswiz.cpp: $(MOC) mdiswiz.h
	$(MOC) mdiswiz.h -o .moc/mw_linux/moc_mdiswiz.cpp

.moc/mw_linux/moc_mdiswizdialogs.cpp: $(MOC) mdiswizdialogs.h
	$(MOC) mdiswizdialogs.h -o .moc/mw_linux/moc_mdiswizdialogs.cpp

.moc/mw_linux/moc_oslinux.cpp: $(MOC) oslinux.h
	$(MOC) oslinux.h -o .moc/mw_linux/moc_oslinux.cpp

.moc/mw_linux/moc_propertiesdlg.cpp: $(MOC) propertiesdlg.h
	$(MOC) propertiesdlg.h -o .moc/mw_linux/moc_propertiesdlg.cpp

.moc/mw_linux/moc_setting.cpp: $(MOC) setting.h
	$(MOC) setting.h -o .moc/mw_linux/moc_setting.cpp

.moc/mw_linux/moc_swmodulestab.cpp: $(MOC) swmodulestab.h
	$(MOC) swmodulestab.h -o .moc/mw_linux/moc_swmodulestab.cpp

.moc/mw_linux/moc_modbbisa201proptab.cpp: $(MOC) models/modbbisa201proptab.h
	$(MOC) models/modbbisa201proptab.h -o .moc/mw_linux/moc_modbbisa201proptab.cpp

####### Install

install: all 

uninstall: 

